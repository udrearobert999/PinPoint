@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Application.Dto.PinDto
@{
    Layout = "_NavLayout";
}
<h1 class="text-center">Create Pin</h1>

@if (TempData["Message"] != null)
{
    <div class="alert alert-info">
        @TempData["Message"]
    </div>
}

<div class="container">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <form asp-action="Create" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group d-flex justify-content-center align-items-center flex-column gap-3">

                    <div class="form-group">
                        <input asp-for="Title" class="form-control rounded-input" placeholder="Input a title..." required="true" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>

                    <div class="upload-container">
                        <input type="file" id="PictureUpload" name="PictureUpload" class="file-input" onchange="loadFile(event)" />
                        <label for="PictureUpload" class="upload-button">Upload</label>
                        <label for="PictureUpload" class="change-button">Change Image</label>
                        <div class="image-preview">
                            <img id="imagePreview" src="#" alt="Image Preview" />
                        </div>
                    </div>
                    <span asp-validation-for="Picture" class="text-danger"></span>

                    <div class="form-group">
                        <input type="submit" value="Create" class="default-button" />
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    function loadFile(event) {
        var output = document.getElementById('imagePreview');
        var file = event.target.files[0];
        var uploadButton = document.querySelector('.upload-button');
        var changeButton = document.querySelector('.change-button');

        output.src = URL.createObjectURL(file);
        output.onload = () => {
            URL.revokeObjectURL(output.src);
            uploadButton.style.display = 'none';
            changeButton.style.display = 'block';
        }
    };
</script>

<style>
    .container {
        padding: 2rem 0;
    }

    .upload-container {
        position: relative;
        width: 30rem;
        min-height: 40rem;
        border: 4px dotted gray;
        border-radius: var(--radius);
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        overflow: hidden;
    }

    .rounded-input {
        border-radius: var(--radius);
        width: 30rem;
        height: 4rem;
    }

    .file-input {
        display: none;
    }

    .upload-button, .change-button {
        padding: 10px 20px;
        cursor: pointer;
        background-color: #f57c00;
        color: white;
        border: none;
        border-radius: 5px;
        text-align: center;
    }

    .change-button {
        display: none;
    }

        .upload-button:hover, .change-button:hover {
            background-color: #e64a19;
        }

    .image-preview {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        overflow: hidden;
        border-radius: var(--radius);
    }

        .image-preview img {
            max-width: 100%;
            max-height: 100%;
        }

    .default-button {
        display: block;
        margin: 0 auto;
        color: white;
        cursor: pointer;
        padding: 1rem;
        width: 30rem;
    }

</style>
